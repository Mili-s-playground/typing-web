{"mappings":"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","sources":["<anon>","src/js/Particle-collision.js"],"sourcesContent":["// const container = document.createElement('div');\n// // container.style.position = 'absolute';\n// const fullWidth = window.innerWidth;\n// const fullHeight = window.innerHeight;\n// // console.log(fullWidth);\n// const box = document.createElement('div');\n// // container.id = 'containerId';\n//\n// const size = 10 + (Math.random() * 90);\n// box.style.width = `${size}px`;\n// box.style.height = `${size}px`;\n// box.style.backgroundColor = 'yellow';\n// box.style.position = 'absolute';\n//\n// const randomWidth = `${(fullWidth - size) * Math.random()}px`;\n// const randomHeight = `${(fullHeight - size) * Math.random()}px`;\n// // console.log(randomWidth);\n// box.style.setProperty('top', randomHeight);\n// box.style.setProperty('left', randomWidth);\n//\n// // let boxPositionX = box.offsetLeft;\n// // let boxPositionY = box.offsetTop;\n//\n// document.querySelector(\"body\").append(box);\n//\n// let speed = 10 * Math.random();\n// setInterval(() => {\n//\n//     if (box.style.top > (fullHeight - size)) {\n//         speed = -speed;\n//     }\n//     if (box.style.left > (fullWidth - size)) {\n//         speed = -speed;\n//     }\n//     box.style.left = box.offsetLeft + speed + 'px';\n//     box.style.top = box.offsetTop + speed + 'px';\n//\n// },100)\nconst particles = [];\n// mouse tracker\nconst brdMouse = document.createElement(\"div\");\nbrdMouse.id = \"brdMouseId\";\nbrdMouse.style.height = '50px';\nbrdMouse.style.width = '50px';\nbrdMouse.style.borderRadius = '25px';\nbrdMouse.style.backgroundColor = 'black';\nbrdMouse.style.borderColor = 'red';\nbrdMouse.style.position = 'absolute';\nbrdMouse.style.opacity = '0';\nfor(let i = 0; i < 20; i++){\n    console.log(\"for loop executed\");\n    const particle = document.createElement('div');\n    const size = 20 + Math.random() * 40;\n    const x = Math.random() * (innerWidth - size);\n    const y = Math.random() * (innerHeight - size);\n    let dx = (5 + Math.random() * 10) * (Math.random() < 0.5 ? -1 : 1);\n    let dy = (5 + Math.random() * 10) * (Math.random() < 0.5 ? -1 : 1);\n    particle.style.position = 'absolute';\n    particle.style.left = `${x}px`;\n    particle.style.top = `${y}px`;\n    particle.style.width = `${size}px`;\n    particle.style.height = `${size}px`;\n    particle.style.borderRadius = `${50}%`;\n    // particle.style.transform = `rotate(${Math.random() * 360}deg)`;\n    const r = Math.random() * 256;\n    const g = Math.random() * 256;\n    const b = Math.random() * 256;\n    particle.style.backgroundColor = `rgb(${r},${g},${b})`;\n    document.body.append(particle);\n    particles.push({\n        particle,\n        size,\n        dx,\n        dy\n    });\n// const smlParticle = document.querySelector('#particle');\n// console.log(smlParticle);\n// smlParticle.addEventListener('move', ()=>{\n//     const particleX = smlParticle.clientX;\n//     const particleY = smlParticle.clientY;\n//     console.log(particleX, particleY);\n// });\n}\nlet tmOut = null;\ndocument.body.append(brdMouse);\ndocument.addEventListener('mousemove', (e)=>{\n    // document.querySelector('body').style.backgroundColor = 'red';\n    // e.clientX + 'px' = brdMouse.style.left;\n    // console.log(e.clientX);\n    // let dx = e.clientX;\n    brdMouse.style.opacity = '1';\n    brdMouse.style.left = `${e.clientX - brdMouse.clientWidth / 2}px`;\n    brdMouse.style.top = `${e.clientY - brdMouse.clientHeight / 2}px`;\n    const mouseStartX = e.clientX;\n    const mouseStartY = e.clientY;\n    clearTimeout(tmOut);\n    // const timeStart = Date.now().;\n    tmOut = setTimeout(()=>{\n        brdMouse.style.opacity = '0';\n        brdMouse.style.transitionProperty = 'opacity';\n        brdMouse.style.transitionDuration = '2s';\n    }, 5000);\n});\ndocument.addEventListener('mouseleave', (e)=>{\n    brdMouse.style.opacity = '0';\n    brdMouse.style.transitionProperty = 'opacity';\n    brdMouse.style.transitionDuration = '4s';\n});\nsetInterval(()=>{\n    for (const p of particles){\n        const { dx, dy, size, particle } = p;\n        particle.style.left = `${particle.offsetLeft + dx}px`;\n        particle.style.top = `${particle.offsetTop + dy}px`;\n        if (particle.offsetTop + size >= innerHeight || particle.offsetTop <= 0) p.dy = -dy;\n        if (particle.offsetLeft + size >= innerWidth || particle.offsetLeft <= 0) p.dx = -dx;\n        if (brdMouse.style.opacity === '0') continue;\n        const x1 = particle.offsetLeft;\n        const y1 = particle.offsetTop;\n        // console.log(\"particle: \", prtX, prtY);\n        const x2 = brdMouse.offsetLeft;\n        const y2 = brdMouse.offsetTop;\n        // console.log(\"mouseX: \", mouseX);\n        // console.log(\"mouseY: \", mouseY);\n        const distance = Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2);\n        const radii = brdMouse.clientWidth / 2 + particle.clientWidth / 2;\n        if (distance < radii) {\n            particle.style.left = `${x1 + brdMouse.clientWidth / 2}px`;\n            particle.style.top = `${y1 + brdMouse.clientHeight / 2}px`;\n            p.dy = -dy;\n            p.dx = -dx;\n        }\n    }\n}, 50);\n\n//# sourceMappingURL=index.ef177dcf.js.map\n","// const container = document.createElement('div');\n// // container.style.position = 'absolute';\n// const fullWidth = window.innerWidth;\n// const fullHeight = window.innerHeight;\n// // console.log(fullWidth);\n// const box = document.createElement('div');\n// // container.id = 'containerId';\n//\n// const size = 10 + (Math.random() * 90);\n// box.style.width = `${size}px`;\n// box.style.height = `${size}px`;\n// box.style.backgroundColor = 'yellow';\n// box.style.position = 'absolute';\n//\n// const randomWidth = `${(fullWidth - size) * Math.random()}px`;\n// const randomHeight = `${(fullHeight - size) * Math.random()}px`;\n// // console.log(randomWidth);\n// box.style.setProperty('top', randomHeight);\n// box.style.setProperty('left', randomWidth);\n//\n// // let boxPositionX = box.offsetLeft;\n// // let boxPositionY = box.offsetTop;\n//\n// document.querySelector(\"body\").append(box);\n//\n// let speed = 10 * Math.random();\n// setInterval(() => {\n//\n//     if (box.style.top > (fullHeight - size)) {\n//         speed = -speed;\n//     }\n//     if (box.style.left > (fullWidth - size)) {\n//         speed = -speed;\n//     }\n//     box.style.left = box.offsetLeft + speed + 'px';\n//     box.style.top = box.offsetTop + speed + 'px';\n//\n// },100)\n\nconst particles = [];\n\n// mouse tracker\nconst brdMouse = document.createElement(\"div\");\nbrdMouse.id = \"brdMouseId\";\nbrdMouse.style.height = '50px';\nbrdMouse.style.width = '50px';\nbrdMouse.style.borderRadius = '25px';\nbrdMouse.style.backgroundColor = 'black';\nbrdMouse.style.borderColor = 'red';\nbrdMouse.style.position = 'absolute';\nbrdMouse.style.opacity = '0';\n\nfor (let i = 0; i < 20; i++) {\n    console.log(\"for loop executed\");\n    const particle = document.createElement('div');\n    const size = 20 + (Math.random() * 40);\n    const x = Math.random() * (innerWidth - size);\n    const y = Math.random() * (innerHeight - size);\n    let dx = (5 + Math.random() * 10) * (Math.random() < 0.5 ? -1 : 1);\n    let dy = (5 + Math.random() * 10) * (Math.random() < 0.5 ? -1 : 1);\n\n    particle.style.position = 'absolute';\n    particle.style.left = `${x}px`;\n    particle.style.top = `${y}px`;\n    particle.style.width = `${size}px`;\n    particle.style.height = `${size}px`;\n    particle.style.borderRadius = `${50}%`;\n    // particle.style.transform = `rotate(${Math.random() * 360}deg)`;\n\n    const r = Math.random() * 256;\n    const g = Math.random() * 256;\n    const b = Math.random() * 256;\n    particle.style.backgroundColor = `rgb(${r},${g},${b})`;\n\n    document.body.append(particle);\n    particles.push({\n        particle,\n        size,\n        dx,\n        dy\n    });\n\n    // const smlParticle = document.querySelector('#particle');\n    // console.log(smlParticle);\n    // smlParticle.addEventListener('move', ()=>{\n    //     const particleX = smlParticle.clientX;\n    //     const particleY = smlParticle.clientY;\n    //     console.log(particleX, particleY);\n    // });\n\n\n\n}\n\nlet tmOut = null;\ndocument.body.append(brdMouse);\ndocument.addEventListener('mousemove',(e)=> {\n    // document.querySelector('body').style.backgroundColor = 'red';\n    // e.clientX + 'px' = brdMouse.style.left;\n    // console.log(e.clientX);\n    // let dx = e.clientX;\n    brdMouse.style.opacity = '1';\n    brdMouse.style.left = `${e.clientX - (brdMouse.clientWidth/2)}px`;\n    brdMouse.style.top = `${e.clientY - (brdMouse.clientHeight/2)}px`;\n\n    const mouseStartX = e.clientX;\n    const mouseStartY = e.clientY;\n\n    clearTimeout(tmOut);\n    // const timeStart = Date.now().;\n    tmOut = setTimeout(() => {\n        brdMouse.style.opacity = '0';\n        brdMouse.style.transitionProperty = 'opacity';\n        brdMouse.style.transitionDuration = '2s';\n    },5000);\n});\n\ndocument.addEventListener('mouseleave',(e)=> {\n    brdMouse.style.opacity = '0';\n    brdMouse.style.transitionProperty = 'opacity';\n    brdMouse.style.transitionDuration = '4s';\n\n});\n\n\nsetInterval(() => {\n\n    for (const p of particles) {\n        const {dx, dy, size, particle} = p;\n        particle.style.left = `${particle.offsetLeft + dx}px`;\n        particle.style.top = `${particle.offsetTop + dy}px`;\n\n        if ((particle.offsetTop + size) >= innerHeight || (particle.offsetTop) <= 0) p.dy = -dy;\n        if ((particle.offsetLeft + size) >= innerWidth || (particle.offsetLeft) <= 0) p.dx = -dx;\n        if (brdMouse.style.opacity === '0') continue;\n\n        const x1 = particle.offsetLeft;\n        const y1 = particle.offsetTop;\n        // console.log(\"particle: \", prtX, prtY);\n\n        const x2 = brdMouse.offsetLeft;\n        const y2 = brdMouse.offsetTop;\n        // console.log(\"mouseX: \", mouseX);\n        // console.log(\"mouseY: \", mouseY);\n\n        const distance = Math.sqrt((x1-x2)**2 + (y1-y2)**2);\n        const radii = brdMouse.clientWidth / 2 + particle.clientWidth / 2;\n        if (distance < radii) {\n            particle.style.left = `${x1 + brdMouse.clientWidth / 2 }px`;\n            particle.style.top = `${y1 + brdMouse.clientHeight / 2 }px`;\n            p.dy = -dy;\n            p.dx = -dx;\n        }\n\n\n\n\n\n    }\n}, 50);\n\n\n\n\n\n\n\n\n\n\n"],"names":["particles","brdMouse","document","createElement","id","style","height","width","borderRadius","backgroundColor","borderColor","position","opacity","i","console","log","particle","size","Math","random","x","innerWidth","y","innerHeight","dx","dy","left","top","r","g","b","body","append","push","tmOut","addEventListener","e","clientX","clientWidth","clientY","clientHeight","clearTimeout","setTimeout","transitionProperty","transitionDuration","setInterval","p","offsetLeft","offsetTop","x1","y1","sqrt"],"version":3,"file":"index.ef177dcf.js.map"}